wcimpute <- read.csv("wc_communities_imputed.csv", row.names = FALSE)
rm(list = ls())
setwd("/Volumes/Personal/GitHub/CSEC-491/data")
library(haven)
library(foreign)
library(dplyr)
library(purrr)
library(readxl)
wcimpute <- read.csv("wc_communities_imputed.csv", row.names = FALSE)
wcimpute <- read.csv("wc_communities_imputed.csv")
View(wcimpute)
wcimpute$avg_area <- ifelse(is.character(wcimpute$avg_area),
sample(seq(5, 15, by = 1)*10, nrow(wcimpute), replace = TRUE) + 50,
wcimpute$avg_area)
wcimpute <- read.csv("wc_communities_imputed.csv")
wcimpute$avg_area <- ifelse(grepl("暂无数据", wcimpute$avg_area),
sample(seq(5, 15) * 10, size = length(wcimpute$avg_area), replace = TRUE),
wcimpute$avg_area)
wcimpute <- read.csv("wc_communities_imputed.csv")
wcimpute$avg_area <- ifelse(grepl("暂无数据", wcimpute$avg_area) | grepl("m", wcimpute$avg_area),
sample(seq(7, 13) * 10, size = length(wcimpute$avg_area), replace = TRUE),
wcimpute$avg_area)
wcimpute$total_units <- ifelse(grepl("暂无数据", wcimpute$total_units),
sample(seq(7, 130) * 10, size = length(wcimpute$total_units), replace = TRUE),
wcimpute$total_units)
write.csv(wcimpute, "wc_imputed.csv", row.names = FALSE)
# Step 5: Analyze based on cleaned & imputed data, check for substitution potential
wc_imputed <- read.csv("wc_imputed.csv")
View(wc_imputed)
summary(wc_imputed$total_units)
summary(wc_imputed$unit_price)
weighted.mean(wc_imputed$unit_price, w=wc_imputed$total_units)
# Step 5: Analyze based on cleaned & imputed data, check for substitution potential
wc_imputed <- read.csv("wc_imputed.csv")
summary(wc_imputed$total_units)
summary(wc_imputed$unit_price)
weighted.mean(wc_imputed$unit_price, w=wc_imputed$total_units)
weighted.mean(wc_imputed$avg_area, w=wc_imputed$total_units)
library(kableExtra)
install.packages("kableExtra")
library(kableExtra)
summary_stats <- wc_imputed %>%
summarize(
n = n(),
floor_area_avg = round(weighted.mean(avg_area, total_units), 1),
unit_price_avg = round(weighted.mean(unit_price, total_units), 1),
median_unit_price = round(weighted.median(unit_price, total_units), 1),
min_unit_price = round(min(unit_price), 1),
max_unit_price = round(max(unit_price), 1)
)
ibrary(haven)
library(foreign)
library(dplyr)
library(purrr)
library(readxl)
library(kableExtra)
install.packages("matrixStats")
library(matrixStats)
summary_stats <- wc_imputed %>%
summarize(
n = n(),
floor_area_avg = round(weighted.mean(avg_area, total_units), 1),
unit_price_avg = round(weighted.mean(unit_price, total_units), 1),
median_unit_price = round(weighted.median(unit_price, total_units), 1),
min_unit_price = round(min(unit_price), 1),
max_unit_price = round(max(unit_price), 1)
)
library(haven)
library(foreign)
library(dplyr)
library(purrr)
library(readxl)
library(matrixStats)
library(kableExtra)
summary_stats <- wc_imputed %>%
summarize(
n = n(),
floor_area_avg = round(weighted.mean(avg_area, total_units), 1),
unit_price_avg = round(weighted.mean(unit_price, total_units), 1),
median_unit_price = round(weighted.median(unit_price, total_units), 1),
min_unit_price = round(min(unit_price), 1),
max_unit_price = round(max(unit_price), 1)
)
summary_stats <- wc_imputed %>%
summarize(
n = n(),
floor_area_avg = round(weighted.mean(avg_area, total_units), 1),
unit_price_avg = round(weighted.mean(unit_price, total_units), 1),
min_unit_price = round(min(unit_price), 1),
max_unit_price = round(max(unit_price), 1)
)
summary_table <- summary_stats %>%
kbl() %>%
kable_classic(full_width = FALSE) %>%
add_header_above(c(" ", "Property Units" = 2, "Unit Price" = 3)) %>%
column_spec(1, bold = TRUE) %>%
column_spec(2:5, align = "c") %>%
footnote(general = "*Weighted mean using total number of units")
summary_table <- summary_stats %>%
kbl() %>%
kable_classic(full_width = FALSE) %>%
add_header_above(c(" ", "Property Units" = 2, "Unit Price" = 3)) %>%
column_spec(1, bold = TRUE) %>%
column_spec(2:5) %>%
footnote(general = "*Weighted mean using total number of units")
summary_table <- summary_stats %>%
kbl() %>%
kable_classic(full_width = FALSE) %>%
add_header_above(c(" ", "Property Units" = 2, "Unit Price" = 3)) %>%
column_spec(1, bold = TRUE) %>%
column_spec(2:4, align = "c") %>%
footnote(general = "*Weighted mean using total number of units")
summary_table <- summary_stats %>%
kbl() %>%
kable_classic(full_width = FALSE) %>%
add_header_above(c(" ", "Property Units" = 2, "Unit Price" = 3)) %>%
column_spec(1, bold = TRUE) %>%
column_spec(2:4) %>%
footnote(general = "*Weighted mean using total number of units")
summary_table <- summary_stats %>%
kbl() %>%
kable_classic(full_width = FALSE) %>%
add_header_above(c(" ", "Property Units" = 2, "Unit Price" = 2)) %>%
column_spec(1, bold = TRUE) %>%
column_spec(2:5) %>%
footnote(general = "*Weighted mean using total number of units")
View(summary_stats)
summary_table
summary_table <- summary_stats %>%
kbl() %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman") %>%
add_header_above(c(" ", "Property Units" = 2, "Unit Price" = 2)) %>%
column_spec(1, bold = TRUE) %>%
column_spec(2:5) %>%
footnote(general = "*Weighted mean using total number of units")
summary_table
summary_stats <- wc_imputed %>%
summarize(n = n(),
min_community = min(total_units),
med_community = median(total_units),
min_community = max(total_units),
units_sum = sum(total_units),
floor_area_avg = round(weighted.mean(avg_area, total_units), 1),
unit_price_avg = round(weighted.mean(unit_price, total_units), 1),
min_unit_price = round(min(unit_price), 1),
max_unit_price = round(max(unit_price), 1)
)
summary_table <- summary_stats %>%
kbl() %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman", font_size = 12) %>%
add_header_above(c("Communities" = 4, "Property Units" = 3, "Unit Price" = 2)) %>%
column_spec(1, bold = TRUE) %>%
column_spec(2:5) %>%
footnote(general = "*Weighted mean using total number of units")
summary_table <- summary_stats %>%
kbl() %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman", font_size = 12) %>%
add_header_above(c("Communities" = 3, "Property Units" = 3, "Unit Price" = 2)) %>%
column_spec(1, bold = TRUE) %>%
column_spec(2:5) %>%
footnote(general = "*Weighted mean using total number of units")
summary_table
summary_table <- summary_stats %>%
kbl() %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman", font_size = 12) %>%
add_header_above(c("Communities" = 4, "Property Units" = 3, "Unit Price" = 2)) %>%
column_spec(1, bold = TRUE) %>%
column_spec(2:5) %>%
footnote(general = "*Weighted mean using total number of units")
summary_stats <- wc_imputed %>%
summarize(n = n(),
min_community = min(total_units),
med_community = median(total_units),
max_community = max(total_units),
units_sum = sum(total_units),
floor_area_avg = round(weighted.mean(avg_area, total_units), 1),
unit_price_avg = round(weighted.mean(unit_price, total_units), 1),
min_unit_price = round(min(unit_price), 1),
max_unit_price = round(max(unit_price), 1)
)
summary_table <- summary_stats %>%
kbl() %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman", font_size = 12) %>%
add_header_above(c("Communities" = 4, "Property Units" = 3, "Unit Price" = 2)) %>%
column_spec(1, bold = TRUE) %>%
column_spec(2:5) %>%
footnote(general = "*Weighted mean using total number of units")
summary_table
summary_stats <- wc_imputed %>%
summarize(n = n(),
units_sum = sum(total_units),
floor_area_avg = round(weighted.mean(avg_area, total_units), 1),
unit_price_avg = round(weighted.mean(unit_price, total_units), 1),
)
summary_table <- summary_stats %>%
kbl(caption = "Summary of Residential Units in Wuchang District") %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman", font_size = 12) %>%
column_spec(1, bold = TRUE) %>%
column_spec(2:5) %>%
footnote(general = "*Weighted mean using total number of units")
summary_stats <- wc_imputed %>%
summarize(n = n(),
units_sum = sum(total_units),
floor_area_avg = round(weighted.mean(avg_area, total_units), 1),
unit_price_avg = round(weighted.mean(unit_price, total_units), 1),
)
summary_table <- summary_stats %>%
kbl(caption = "Summary of Residential Units in Wuchang District") %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman", font_size = 12) %>%
footnote(general = "*Weighted mean using total number of units")
summary_table
summary_table <- summary_stats %>%
col.names = c("a", "b", "c", "d") %>%
kbl(caption = "Summary of Residential Units in Wuchang District") %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman", font_size = 12) %>%
footnote(general = "*Weighted mean using total number of units")
summary_stats <- wc_imputed %>%
summarize("Total Communities" = n(),
"Sum of" = sum(total_units),
floor_area_avg = round(weighted.mean(avg_area, total_units), 1),
unit_price_avg = round(weighted.mean(unit_price, total_units), 1),
)
summary_table <- summary_stats %>%
kbl(caption = "Summary of Residential Units in Wuchang District") %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman", font_size = 12) %>%
footnote(general = "*Weighted mean using total number of units")
summary_table
summary_stats <- wc_imputed %>%
summarize("Communities" = n(),
"Units" = sum(total_units),
"Average Area" = round(weighted.mean(avg_area, total_units), 1),
"Average Unit Price" = round(weighted.mean(unit_price, total_units), 1),
)
summary_table <- summary_stats %>%
kbl(caption = "Summary of Residential Units in Wuchang District") %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman", font_size = 12) %>%
footnote(general = "*Weighted mean using total number of units")
summary_table
summary_table <- summary_stats %>%
kbl(caption = "Summary of Residential Units in Wuchang District") %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman", font_size = 12) %>%
column_spec(1:4, width = "3cm") %>%
footnote(general = "*Weighted mean using total number of units")
summary_table
summary_table <- summary_stats %>%
kbl(caption = "Summary of Residential Units in Wuchang District") %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman", font_size = 12) %>%
column_spec(1:4, width = "1cm") %>%
footnote(general = "*Weighted mean using total number of units")
summary_table
summary_table <- summary_stats %>%
kbl(caption = "Summary of Residential Units in Wuchang District") %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman", font_size = 12) %>%
column_spec(1:4, width = "2cm") %>%
footnote(general = "*Weighted mean using total number of units")
summary_table
summary_table <- summary_stats %>%
kbl(caption = "Summary of Residential Units in Wuchang District") %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman", font_size = 12) %>%
column_spec(1:4, width = "3cm") %>%
footnote(general = "*Weighted mean using total number of units")
summary_table
new_rows <- data.frame(unit_price = rep(wc_imputed$unit_price[i], wc_imputed$total_units[i]),
floor_area = rep(wc_imputed$avg_area[i], wc_imputed$total_units[i]))
# create new dataframe of individual properties
for (i in seq_len(nrow(wc_imputed))) {
new_rows <- data.frame(unit_price = rep(wc_imputed$unit_price[i], wc_imputed$total_units[i]),
floor_area = rep(wc_imputed$avg_area[i], wc_imputed$total_units[i]))
wc_properties <- rbind(new_df, new_rows)
}
# create new dataframe of individual properties
for (i in seq_len(nrow(wc_imputed))) {
new_rows <- data.frame(unit_price = rep(wc_imputed$unit_price[i], wc_imputed$total_units[i]),
floor_area = rep(wc_imputed$avg_area[i], wc_imputed$total_units[i]))
wc_properties <- rbind(wc_properties, new_rows)
}
# create new dataframe of individual properties
wc_properties <- data.frame(unit_price = numeric(), floor_area = numeric(), community = character())
for (i in seq_len(nrow(wc_imputed))) {
new_rows <- data.frame(unit_price = rep(wc_imputed$unit_price[i], wc_imputed$total_units[i]),
floor_area = rep(wc_imputed$avg_area[i], wc_imputed$total_units[i]),
community = rep(wc_imputed$community[i], wc_imputed$total_units[i]))
wc_properties <- rbind(wc_properties, new_rows)
}
View(wc_properties)
wc_properties$total_price = wc_properties$unit_price * wc_properties$floor_area
# flat rate
flat_rate_amount <- sum(wc_properties$total_price) * 0.01
flat_rate_amount
# quartile rate
wc_properties <- wc_properties %>%
mutate(quartile = ntile(unit_price, 4))
View(wc_properties)
# quartile rate
wc_properties <- wc_properties %>%
mutate(quartile = ntile(unit_price, 4)) %>%
mutate(quintile = ntile(unit_price, 5))
# quartile rate
wc_properties <- wc_properties %>%
mutate(quartile = ntile(unit_price, 4)) %>%
mutate(quintile = ntile(unit_price, 5)) %>%
mutate(area_tertile = ntile(floor_area, 3))
# quartile rate
wc_properties <- wc_properties %>%
mutate(unit_price_quartile = ntile(unit_price, 4)) %>%
mutate(unit_price_quintile = ntile(unit_price, 5)) %>%
mutate(area_tertile = ntile(floor_area, 3))
wc_properties <- select(wc_properties, -quartile, -quintile)
# quartile rate
wc_properties <- wc_properties %>%
mutate(unit_price_tertile = ntile(unit_price, 3)) %>%
mutate(unit_price_quartile = ntile(unit_price, 4)) %>%
mutate(unit_price_quintile = ntile(unit_price, 5)) %>%
mutate(area_tertile = ntile(floor_area, 3)) %>%
mutate(area_quartile = ntile(floor_area, 4)) %>%
mutate(area_quintile = ntile(floor_area, 5)) %>%
mutate(total_price_tertile = ntile(total_price, 3)) %>%
mutate(total_price_quartile = ntile(total_price, 4)) %>%
mutate(total_price_quintile = ntile(total_price, 5))
tiered_rate_amount <- sum(sapply(tax_rate_1, function(rate) {
sapply(quartiles, function(q) {
sum(wc_properties$total_price[wc_properties$unit_price_quartile == q] * rate)
})
}))
# quartile rate based on unit price, at 0, 0.5, 1, 1.5
tax_rate_1 <- c(0, 0.005, 0.01, 0.015)
tiered_rate_amount <- sum(sapply(tax_rate_1, function(rate) {
sapply(quartiles, function(q) {
sum(wc_properties$total_price[wc_properties$unit_price_quartile == q] * rate)
})
}))
# quartile rate based on unit price, at 0, 0.5, 1, 1.5
tax_rate_1 <- c(0, 0.005, 0.01, 0.015)
quartiles <- c(1, 2, 3, 4)
tiered_rate_amount <- sum(sapply(tax_rate_1, function(rate) {
sapply(quartiles, function(q) {
sum(wc_properties$total_price[wc_properties$unit_price_quartile == q] * rate)
})
}))
# quartile rate based on unit price, at 0, 0.5, 1, 1.5
tax_rate_1 <- c(0, 0.005, 0.01, 0.012)
quartiles <- c(1, 2, 3, 4)
tiered_rate_amount
tiered_rate_amount_1 <- sum(sapply(tax_rate_1, function(rate) {
sapply(quartiles, function(q) {
sum(wc_properties$total_price[wc_properties$unit_price_quartile == q] * rate)
})
}))
sum(wc_properties$total_price[wc_properties$total_price_quartile == q] * rate)
tiered_rate_amount_2 <- sum(sapply(tax_rate_1, function(rate) {
sapply(quartiles, function(q) {
sum(wc_properties$total_price[wc_properties$total_price_quartile == q] * rate)
})
}))
tiered_rate_amount_2
flat_rate_amount_less <- sum(wc_properties$total_price) * 0.005
# area rate
tax_rate_2 <- c(0, 0.005, 0.01)
tertiles <- c(1, 2, 3)
tiered_rate_amount_area <- sum(sapply(tax_rate_2, function(rate) {
sapply(tertiles, function(q) {
sum(wc_properties$total_price[wc_properties$area_tertile == q] * rate)
})
}))
tiered_rate_amount_area
# quartile rate with 60 sqmt exemption, based on unit price regime
tiered_rate_unit_price_exempt <- sum(sapply(tax_rate_1, function(rate) {
sapply(quartiles, function(q) {
sum(ifelse(wc_properties$unit_price_quartile == q & wc_properties$floor_area > 60,
wc_properties$unit_price * (wc_properties$floor_area - 60) * rate, 0))
})
}))
tiered_rate_unit_price_exempt
tiered_rate_total_price_exempt <- sum(sapply(tax_rate_1, function(rate) {
sapply(quartiles, function(q) {
sum(ifelse(wc_properties$total_price_quartile == q & wc_properties$floor_area > 60,
wc_properties$unit_price * (wc_properties$floor_area - 60) * rate, 0))
})
}))
sum(ifelse(wc_properties$area_tertile == q & wc_properties$floor_area > 60,
wc_properties$unit_price * (wc_properties$floor_area - 60) * rate, 0))
tiered_rate_area_exempt <- sum(sapply(tax_rate_1, function(rate) {
sapply(tertiles, function(q) {
sum(ifelse(wc_properties$area_tertile == q & wc_properties$floor_area > 60,
wc_properties$unit_price * (wc_properties$floor_area - 60) * rate, 0))
})
}))
tiered_rate_area_exempt <- sum(sapply(tax_rate_2, function(rate) {
sapply(tertiles, function(q) {
sum(ifelse(wc_properties$area_tertile == q & wc_properties$floor_area > 60,
wc_properties$unit_price * (wc_properties$floor_area - 60) * rate, 0))
})
}))
tiered_rate_area_exempt
# total price rate
tax_rate_3 <- c(0, 0.005, 0.08, 0.011, 0.015)
quintiles <- c(1, 2, 3, 4, 5)
tiered_rate_amount_total_price <- sum(sapply(tax_rate_3, function(rate) {
sapply(quintiles, function(q) {
sum(wc_properties$total_price[wc_properties$total_price_quintiles == q] * rate)
})
}))
# total price rate
tax_rate_3 <- c(0, 0.005, 0.08, 0.011, 0.015)
quintiles <- c(1, 2, 3, 4, 5)
tiered_rate_amount_total_price <- sum(sapply(tax_rate_3, function(rate) {
sapply(quintiles, function(q) {
sum(wc_properties$total_price[wc_properties$total_price_quintiles == q] * rate)
})
}))
tiered_rate_amount_total_price <- sum(sapply(tax_rate_3, function(rate) {
sapply(quintiles, function(q) {
sum(wc_properties$total_price[wc_properties$area_quintile == q] * rate)
})
}))
View(wc_properties)
tiered_rate_amount_total_price <- sum(sapply(tax_rate_3, function(rate) {
sapply(quintiles, function(q) {
sum(wc_properties$total_price[wc_properties$total_price_quintile == q] * rate)
})
}))
tiered_rate_amount_total_price
# total price rate
tax_rate_3 <- c(0, 0.005, 0.008, 0.011, 0.015)
quintiles <- c(1, 2, 3, 4, 5)
tiered_rate_amount_total_price <- sum(sapply(tax_rate_3, function(rate) {
sapply(quintiles, function(q) {
sum(wc_properties$total_price[wc_properties$total_price_quintile == q] * rate)
})
}))
tiered_rate_amount_total_price
# save for website use
write.csv(wc_properties, "wc_properties.csv", row.names = FALSE)
